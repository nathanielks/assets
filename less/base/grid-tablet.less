/////////////////
// Semantic.gs // for LESS: http://lesscss.org/
/////////////////

// Utility variable you should never need to modify this
@gridsystem-width-t: (@column-width-t*@columns-t) + (@gutter-width-t*@columns-t) * 1px;

// Set @total-width-t to 100% for a fluid layout
@total-width-t: @gridsystem-width-t;
/*@total-width-t: 100%;*/

// Uncomment these two lines and the star-hack width/margin lines below to enable sub-pixel fix for IE6 & 7. See http://tylertate.com/blog/2012/01/05/subpixel-rounding.html
// @min-width-t: 960;
// @correction: 0.5 / @min-width-t * 100 * 1%;

.row-t(@columns-t:@columns-t) {
	display: block;
	width: @total-width-t*((@gutter-width-t + @gridsystem-width-t)/@gridsystem-width-t);
	margin: 0 @total-width-t*(((@gutter-width-t*.5)/@gridsystem-width-t)*-1);
	// *width: @total-width-t*((@gutter-width-t + @gridsystem-width-t)/@gridsystem-width-t)-@correction;
	// *margin: 0 @total-width-t*(((@gutter-width-t*.5)/@gridsystem-width-t)*-1)-@correction;
	.clearfix;
}
.column-t(@x,@columns-t:@columns-t) {
	display: inline;
	float: left;
	width: @total-width-t*((((@gutter-width-t+@column-width-t)*@x)-@gutter-width-t) / @gridsystem-width-t);
	margin: 0 @total-width-t*((@gutter-width-t*.5)/@gridsystem-width-t);
	// *width: @total-width-t*((((@gutter-width-t+@column-width-t)*@x)-@gutter-width-t) / @gridsystem-width-t)-@correction;
	// *margin: 0 @total-width-t*((@gutter-width-t*.5)/@gridsystem-width-t)-@correction;
}
.push-t(@offset:1) {
	margin-left: @total-width-t*(((@gutter-width-t+@column-width-t)*@offset) / @gridsystem-width-t) + @total-width-t*((@gutter-width-t*.5)/@gridsystem-width-t);
}
.pull-t(@offset:1) {
	margin-right: @total-width-t*(((@gutter-width-t+@column-width-t)*@offset) / @gridsystem-width-t) + @total-width-t*((@gutter-width-t*.5)/@gridsystem-width-t);
}
