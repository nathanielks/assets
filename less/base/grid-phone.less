/////////////////
// Semantic.gs // for LESS: http://lesscss.org/
/////////////////

// Utility variable you should never need to modify this
@gridsystem-width-p: (@column-width-p*@columns-p) + (@gutter-width-p*@columns-p) * 1px;

// Set @total-width-p to 100% for a fluid layout
@total-width-p: @gridsystem-width-p;

// Uncomment these two lines and the star-hack width/margin lines below to enable sub-pixel fix for IE6 & 7. See http://tylertate.com/blog/2012/01/05/subpixel-rounding.html
// @min-width-p: 960;
// @correction: 0.5 / @min-width-p * 100 * 1%;

.row-p(@columns-p:@columns-p) {
	display: block;
	width: @total-width-p*((@gutter-width-p + @gridsystem-width-p)/@gridsystem-width-p);
	margin: 0 @total-width-p*(((@gutter-width-p*.5)/@gridsystem-width-p)*-1);
	// *width: @total-width-p*((@gutter-width-p + @gridsystem-width-p)/@gridsystem-width-p)-@correction;
	// *margin: 0 @total-width-p*(((@gutter-width-p*.5)/@gridsystem-width-p)*-1)-@correction;
	.clearfix;
}
.column-p(@x,@columns-p:@columns-p) {
	display: inline;
	float: left;
	width: @total-width-p*((((@gutter-width-p+@column-width-p)*@x)-@gutter-width-p) / @gridsystem-width-p);
	margin: 0 @total-width-p*((@gutter-width-p*.5)/@gridsystem-width-p);
	// *width: @total-width-p*((((@gutter-width-p+@column-width-p)*@x)-@gutter-width-p) / @gridsystem-width-p)-@correction;
	// *margin: 0 @total-width-p*((@gutter-width-p*.5)/@gridsystem-width-p)-@correction;
}
.push-p(@offset:1) {
	margin-left: @total-width-p*(((@gutter-width-p+@column-width-p)*@offset) / @gridsystem-width-p) + @total-width-p*((@gutter-width-p*.5)/@gridsystem-width-p);
}
.pull-p(@offset:1) {
	margin-right: @total-width-p*(((@gutter-width-p+@column-width-p)*@offset) / @gridsystem-width-p) + @total-width-p*((@gutter-width-p*.5)/@gridsystem-width-p);
}
